plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.likelion'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}


processResources {
    dependsOn 'copyResources'
}

tasks.register('copyResources', Copy) {
    from './Spring-Study-Config'
    include '*.properties' // properties 관련 파일들을 등록한다는 의미
    into 'src/main/resources/' // 등록 위치
}

test {
    doFirst { // 모든 작업 시작 전 가장 먼저 실행
        def profile = project.hasProperty('profile') ? project.property('profile').toString() : 'local'
        jvmArgs = ["-Dspring.profiles.active=${profile}"]
    }
}